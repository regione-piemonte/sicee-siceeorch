<?xml version="1.0" encoding="UTF-8"?>
<!--
    SPDX-License-Identifier: EUPL-1.2
    Copyright Regione Piemonte - 2020
 -->

<!DOCTYPE workflow PUBLIC "-//OpenSymphony Group//DTD OSWorkflow 2.8//EN" "http://www.opensymphony.com/osworkflow/workflow_2_8.dtd">
<!-- definizione di workflow generata a partire dal modello dell'orchestrazione -->
<workflow>
	<initial-actions>
		<action id="0" name="Start Workflow">
			<results>
				<unconditional-result id="5" old-status="Finished"
					status="Queued" step="1" />
			</results>
		</action>
	</initial-actions>
	<steps>
		<step name="Inizio" id="1">
		<actions>
			<action name="vaiInFondo" id="100">
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="100">
					</unconditional-result>
				</results>
			</action>
		</actions>
		</step>
	
	<step name="StartGetStampaCertificatoReadOnly" id="100">
		<actions>
			<action name="next" id="1100">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.AAStartGetStampaCertificatoReadOnlyHandler</arg>
						<arg name="input.binding.0">numCertificatore=SLOT_numCertificatore</arg>
						<arg name="input.binding.1">progrCertificato=SLOT_progrCertificato</arg>
						<arg name="input.binding.2">annoCertificato=SLOT_annoCertificato</arg>
						<arg name="input.binding.3">idStatoAttestato=SLOT_idStatoAttestato</arg>
					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="101">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="ConvertToInputParamApe" id="101">
		<actions>
			<action name="next" id="1101">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXConvertToInputParamApeHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_annoCertificato</arg>
						<arg name="input.slot.class.0">java.lang.String</arg>
						<arg name="input.slot.name.1">SLOT_numCertificatore</arg>
						<arg name="input.slot.class.1">java.lang.String</arg>
						<arg name="input.slot.name.2">SLOT_progrCertificato</arg>
						<arg name="input.slot.class.2">java.lang.String</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_filtroSrv</arg>
						<arg name="output.slot.class">it.csi.sicee.siceesrv.dto.siceesrv.FiltroRicercaAce</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="102">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="GetUidFotoPrincipaleApe" id="102">
		<actions>
			<action name="next" id="1102">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.PAPDGetUidFotoPrincipaleApeHandler</arg>	 	
						<arg name="selectorPD">selector_siceesrv_ejbpa.properties</arg>
						
						<arg name="servicePD">defpd_siceesrv.xml</arg>
					</function>
				</pre-functions>
				<results>
					<result old-status="Queued"
						status="Finished" step="120">
						<conditions>
							<condition type="class">
  								<arg name="class.name">it.csi.sicee.siceeorch.business.handlers.ExceptionRaisedCondition</arg>
  								<arg name="handled.exceptions">it.csi.sicee.siceesrv.exception.siceesrv.SiceesrvException</arg> 
  							</condition>
  						</conditions>
					</result>
					<unconditional-result old-status="Queued"
						status="Finished" step="103">
					</unconditional-result>
				</results>	
			</action>
		</actions>
	</step>

	<step name="CheckFotoPresente" id="103">
		<actions>
			<action name="next" id="1103">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CKCheckFotoPresenteHandler</arg>	
					</function>
				</pre-functions>
				<results>
					<!-- se la condizione e' soddisfatta -->
					<result old-status="Queued"
						status="Finished" step="104">
						<conditions>
							<condition type="class">
  								<arg name="class.name">it.csi.sicee.siceeorch.business.handlers.LastConditionSatisfied</arg>
  							</condition>
  						</conditions>
					</result>
					<!-- se la condizione non e' soddisfatta -->
					<unconditional-result old-status="Queued"
						status="Finished" step="109">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="ConvertUidFotoPrincipaleToDocumento" id="104">
		<actions>
			<action name="next" id="1104">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXConvertUidFotoPrincipaleToDocumentoHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_uidFoto</arg>
						<arg name="input.slot.class.0">java.lang.String</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_docRic</arg>
						<arg name="output.slot.class">it.csi.sicee.siceeorch.dto.siceeorch.Documento</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="105">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="ConvertDocumentoToNode" id="105">
		<actions>
			<action name="next" id="1105">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXConvertDocumentoToNodeHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_docRic</arg>
						<arg name="input.slot.class.0">it.csi.sicee.siceeorch.dto.siceeorch.Documento</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_nodeRic</arg>
						<arg name="output.slot.class">it.doqui.index.ecmengine.dto.Node</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="106">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="ConvertDocumentoToContent" id="106">
		<actions>
			<action name="next" id="1106">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXConvertDocumentoToContentHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_docRic</arg>
						<arg name="input.slot.class.0">it.csi.sicee.siceeorch.dto.siceeorch.Documento</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_contentRic</arg>
						<arg name="output.slot.class">it.doqui.index.ecmengine.dto.engine.management.Content</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="107">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="ConvertDocumentoOperationContext" id="107">
		<actions>
			<action name="next" id="1107">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXConvertDocumentoOperationContextHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_docRic</arg>
						<arg name="input.slot.class.0">it.csi.sicee.siceeorch.dto.siceeorch.Documento</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_operationContextRic</arg>
						<arg name="output.slot.class">it.doqui.index.ecmengine.dto.OperationContext</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="108">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="RetrieveContentData" id="108">
		<actions>
			<action name="next" id="1108">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.PAPDRetrieveContentDataHandler</arg>	 	
						<arg name="selectorPD">selector_index_mngmt_ejbpa.properties</arg>
						
						<arg name="servicePD">defpd_indexmngmt.xml</arg>
					</function>
				</pre-functions>
				<results>
					<result old-status="Queued"
						status="Finished" step="120">
						<conditions>
							<condition type="class">
  								<arg name="class.name">it.csi.sicee.siceeorch.business.handlers.ExceptionRaisedCondition</arg>
  								<arg name="handled.exceptions">it.doqui.index.ecmengine.exception.InvalidParameterException,it.doqui.index.ecmengine.exception.publishing.NoSuchNodeException,it.doqui.index.ecmengine.exception.publishing.engine.management.ReadException,it.doqui.index.ecmengine.exception.publishing.InvalidCredentialsException,it.doqui.index.ecmengine.exception.publishing.PermissionDeniedException,it.doqui.index.ecmengine.exception.publishing.EcmEngineTransactionException,java.rmi.RemoteException</arg> 
  							</condition>
  						</conditions>
					</result>
					<unconditional-result old-status="Queued"
						status="Finished" step="109">
					</unconditional-result>
				</results>	
			</action>
		</actions>
	</step>

	<step name="GetXmlStampaCertificato2015" id="109">
		<actions>
			<action name="next" id="1109">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.PAPDGetXmlStampaCertificato2015Handler</arg>	 	
						<arg name="selectorPD">selector_siceesrv_ejbpa.properties</arg>
						
						<arg name="servicePD">defpd_siceesrv.xml</arg>
					</function>
				</pre-functions>
				<results>
					<result old-status="Queued"
						status="Finished" step="120">
						<conditions>
							<condition type="class">
  								<arg name="class.name">it.csi.sicee.siceeorch.business.handlers.ExceptionRaisedCondition</arg>
  								<arg name="handled.exceptions">it.csi.sicee.siceesrv.exception.siceesrv.SiceesrvException</arg> 
  							</condition>
  						</conditions>
					</result>
					<unconditional-result old-status="Queued"
						status="Finished" step="110">
					</unconditional-result>
				</results>	
			</action>
		</actions>
	</step>

	<step name="CreateApplicazione" id="110">
		<actions>
			<action name="next" id="1110">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXCreateApplicazioneHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_applicazione</arg>
						<arg name="output.slot.class">it.csi.modol.modolsrv.dto.Applicazione</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="111">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="ConvertXmlCertToXmlModel" id="111">
		<actions>
			<action name="next" id="1111">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXConvertXmlCertToXmlModelHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_arrayXmlDoc</arg>
						<arg name="input.slot.class.0">byte[]</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_xmlModel</arg>
						<arg name="output.slot.class">it.csi.modol.modolsrv.dto.XmlModel</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="112">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="CreateFiltroRicModel" id="112">
		<actions>
			<action name="next" id="1112">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXCreateFiltroRicModelHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_filtroRicModulo</arg>
						<arg name="output.slot.class">it.csi.modol.modolsrv.dto.criteri.CriterioRicercaModulo</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="113">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="RicercaModulo" id="113">
		<actions>
			<action name="next" id="1113">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.PAPDRicercaModuloHandler</arg>	 	
						<arg name="selectorPD">selector_modolsrv_ejbpa.properties</arg>
						
						<arg name="servicePD">defpd_modolsrv.xml</arg>
					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="114">
					</unconditional-result>
				</results>	
			</action>
		</actions>
	</step>

	<step name="ConvertArrayModuloToModulo" id="114">
		<actions>
			<action name="next" id="1114">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXConvertArrayModuloToModuloHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_arrayModulo</arg>
						<arg name="input.slot.class.0">it.csi.modol.modolsrv.dto.Modulo[]</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_modulo</arg>
						<arg name="output.slot.class">it.csi.modol.modolsrv.dto.Modulo</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="115">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="MargeModulo" id="115">
		<actions>
			<action name="next" id="1115">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.PAPDMargeModuloHandler</arg>	 	
						<arg name="selectorPD">selector_modolsrv_ejbpa.properties</arg>
						
						<arg name="servicePD">defpd_modolsrv.xml</arg>
					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="116">
					</unconditional-result>
				</results>	
			</action>
		</actions>
	</step>

	<step name="ConvertModuloToArrayByte" id="116">
		<actions>
			<action name="next" id="1116">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXConvertModuloToArrayByteHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_modulo</arg>
						<arg name="input.slot.class.0">it.csi.modol.modolsrv.dto.Modulo</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_arrayPdf</arg>
						<arg name="output.slot.class">byte[]</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="117">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="CreatePdfAInputRequest" id="117">
		<actions>
			<action name="next" id="1117">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXCreatePdfAInputRequestHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<arg name="input.slot.name.0">SLOT_arrayPdf</arg>
						<arg name="input.slot.class.0">byte[]</arg>
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_pdfAInputRequest</arg>
						<arg name="output.slot.class">it.csi.modol.modolpdfgeneratorsrv.dto.pdfa.PdfAInputRequest</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="118">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="CreateApplicazionePdfGen" id="118">
		<actions>
			<action name="next" id="1118">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">
							it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.CTXCreateApplicazionePdfGenHandler
						</arg>	
						
						<!-- configurazione degli input slot -->
						<!-- configurazione dell'output slot -->
						<arg name="output.slot.name">SLOT_applicazionePdfGen</arg>
						<arg name="output.slot.class">it.csi.modol.modolpdfgeneratorsrv.dto.Applicazione</arg>

					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="119">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>

	<step name="GetPdfStatico" id="119">
		<actions>
			<action name="next" id="1119">
				<pre-functions>
				    <function type="class">
						<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.PAPDGetPdfStaticoHandler</arg>	 	
						<arg name="selectorPD">selector_modolpdfgenerator_ejbpa.properties</arg>
						
						<arg name="servicePD">defpd_modolpdfgenerator.xml</arg>
					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="120">
					</unconditional-result>
				</results>	
			</action>
		</actions>
	</step>

	<step name="StopGetStampaCertificatoReadOnly" id="120">
		<actions>
			<action name="next" id="1120">
				<pre-functions>
				    <function type="class">
				    	<arg name="class.name">it.csi.sicee.siceeorch.business.siceeorch.handlers.getstampacertificatoreadonly.ZZStopGetStampaCertificatoReadOnlyHandler</arg>
						<arg name="output.binding">SLOT_arrayPdf</arg>
						
						<arg name="exception.mapping.from.0">it.csi.sicee.siceesrv.exception.siceesrv.SiceesrvException</arg>
						<arg name="exception.mapping.to.0">it.csi.sicee.siceeorch.exception.siceeorch.SiceesrvException</arg>
						<arg name="exception.mapping.msg.0">Errore</arg>
						<arg name="exception.mapping.from.1">it.doqui.index.ecmengine.exception.InvalidParameterException</arg>
						<arg name="exception.mapping.to.1">it.csi.sicee.siceeorch.exception.siceeorch.SiceesrvException</arg>
						<arg name="exception.mapping.msg.1">Errore</arg>
						<arg name="exception.mapping.from.2">it.doqui.index.ecmengine.exception.publishing.NoSuchNodeException</arg>
						<arg name="exception.mapping.to.2">it.csi.sicee.siceeorch.exception.siceeorch.SiceesrvException</arg>
						<arg name="exception.mapping.msg.2">Errore</arg>
						<arg name="exception.mapping.from.3">it.doqui.index.ecmengine.exception.publishing.engine.management.ReadException</arg>
						<arg name="exception.mapping.to.3">it.csi.sicee.siceeorch.exception.siceeorch.SiceesrvException</arg>
						<arg name="exception.mapping.msg.3">Errore</arg>
						<arg name="exception.mapping.from.4">it.doqui.index.ecmengine.exception.publishing.InvalidCredentialsException</arg>
						<arg name="exception.mapping.to.4">it.csi.sicee.siceeorch.exception.siceeorch.SiceesrvException</arg>
						<arg name="exception.mapping.msg.4">Errore</arg>
						<arg name="exception.mapping.from.5">it.doqui.index.ecmengine.exception.publishing.PermissionDeniedException</arg>
						<arg name="exception.mapping.to.5">it.csi.sicee.siceeorch.exception.siceeorch.SiceesrvException</arg>
						<arg name="exception.mapping.msg.5">Errore</arg>
						<arg name="exception.mapping.from.6">it.doqui.index.ecmengine.exception.publishing.EcmEngineTransactionException</arg>
						<arg name="exception.mapping.to.6">it.csi.sicee.siceeorch.exception.siceeorch.SiceesrvException</arg>
						<arg name="exception.mapping.msg.6">Errore</arg>
						<arg name="exception.mapping.from.7">java.rmi.RemoteException</arg>
						<arg name="exception.mapping.to.7">it.csi.sicee.siceeorch.exception.siceeorch.SiceesrvException</arg>
						<arg name="exception.mapping.msg.7">Errore</arg>
						
					</function>
				</pre-functions>
				<results>
					<unconditional-result old-status="Queued"
						status="Finished" step="9999">
					</unconditional-result>
				</results>
			</action>
		</actions>
	</step>
		<step name="Fine" id="9999"></step>
	</steps>
</workflow>
